incarnation: scafi

variables:
  actionSpace: &actionSpace { formula: it.unibo.experiment.cc.CCActions.toSeq(), language: scala }

network-model:
  type: ClosestN
  parameters: [ 5 ]

environment:
  type: Continuous2DEnvironment
  parameters: []
  global-programs:
    - time-distribution:
        type: DiracComb
        parameters: [ 0.1,  1.0 ]
      type: CollectiveAction
      parameters: [ ]
_reactions:
  - program: &program
      - time-distribution:
          type: DiracComb
          parameters: [ 0.0,  1.0 ]
        type: Event
        actions:
          - type: RunScafiProgram
            parameters: [ it.unibo.experiment.cc.CCScafiAgent, 1.1 ]
      - program: send

deployments:
  type: Grid
  #parameters: [ -1, -1, 1, 1, 1, 1, 0, 0 ]
  parameters: [-5, -5, 5, 5, 2, 1, 1, 1] # more agents... (50)
  programs:
    - *program
    #- *move