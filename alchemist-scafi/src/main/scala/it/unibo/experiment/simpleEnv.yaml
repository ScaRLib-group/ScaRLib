incarnation: scafi

variables:
  actionSpace: &actionSpace { formula: it.unibo.experiment.Actions.toSeq(), language: scala }

network-model:
  type: ClosestN
  parameters: [ 3 ]

_reactions:
  - program: &program
      - time-distribution:
          type: DiracComb
          parameters: [ 1.0 ]
        type: Event
        actions:
          - type: RunScafiProgram
            parameters: [ it.unibo.experiment.ScafiAgent ]
      - program: send
#  - program: &actuator
#      - time-distribution:
#          type: DiracComb
#          parameters: [ 1.0 ]
#        type: Event
#        actions:
#          - type: it.unibo.experiment.Actuator
#            parameters: [ *actionSpace ]
#      - program: send

deployments:
  type: Grid
  parameters: [ -1, -1, 1, 1, 1, 1, 0, 0 ]
  programs:
    - *program
#    - *actuator